volumes:
  tfidf_db:
  static_volume:
  media_volume:

services:

  db:
    image: postgres:17.5
    container_name: tfidf_db
    restart: always
    env_file: .env
    volumes:
      - tfidf_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend:
    build: .
    container_name: tfidf_backend
    restart: always
    env_file: .env
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db

  nginx:
    image: nginx:1.27.5
    container_name: tfidf_nginx
    restart: always
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - backend

  init:
    build: .
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             echo 'Initialization completed'"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
